% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fuzzy_w.R
\docType{class}
\name{SequenceMatcher}
\alias{SequenceMatcher}
\title{Character string sequence matching}
\usage{
# init <- SequenceMatcher$new(string1 = NULL, string2 = NULL)
}
\description{
Character string sequence matching

Character string sequence matching
}
\details{
the \emph{ratio} method returns a measure of the sequences' similarity as a float in the range [0, 1]. Where T is the total number of elements in both sequences, and M is the number of matches, this
is 2.0*M / T. Note that this is 1.0 if the sequences are identical, and 0.0 if they have nothing in common. This is expensive to compute if getMatchingBlocks() or getOpcodes() hasnâ€™t already been called,
in which case you may want to try quickRatio() or realQuickRatio() first to get an upper bound.

the \emph{quick_ratio} method returns an upper bound on ratio() relatively quickly.

the \emph{real_quick_ratio} method returns an upper bound on ratio() very quickly.

the \emph{get_matching_blocks} method returns a list of triples describing matching subsequences. Each triple is of the form [i, j, n], and means that a[i:i+n] == b[j:j+n]. The triples are monotonically
increasing in i and j. The last triple is a dummy, and has the value [a.length, b.length, 0]. It is the only triple with n == 0. If [i, j, n] and [i', j', n'] are adjacent triples in the list, and the second
is not the last triple in the list, then i+n != i' or j+n != j'; in other words, adjacent triples always describe non-adjacent equal blocks.

The \emph{get_opcodes} method returns a list of 5-tuples describing how to turn a into b. Each tuple is of the form [tag, i1, i2, j1, j2]. The first tuple has i1 == j1 == 0, and remaining tuples have i1 equal to
the i2 from the preceding tuple, and, likewise, j1 equal to the previous j2. The tag values are strings, with these meanings:
'replace'   a[i1:i2] should be replaced by b[j1:j2].
'delete'    a[i1:i2] should be deleted. Note that j1 == j2 in this case.
'insert'    b[j1:j2] should be inserted at a[i1:i1]. Note that i1 == i2 in this case.
'equal'     a[i1:i2] == b[j1:j2] (the sub-sequences are equal).
}
\section{Methods}{


\describe{
 \item{\code{SequenceMatcher$new(string1 = NULL, string2 = NULL)}}{}

 \item{\code{--------------}}{}

 \item{\code{ratio()}}{}

 \item{\code{--------------}}{}

 \item{\code{quick_ratio()}}{}

 \item{\code{--------------}}{}

 \item{\code{real_quick_ratio()}}{}

 \item{\code{--------------}}{}

 \item{\code{get_matching_blocks()}}{}

 \item{\code{--------------}}{}

 \item{\code{get_opcodes()}}{}
 }
}

\examples{

try({
  if (reticulate::py_available(initialize = FALSE)) {

    if (check_availability()) {

      library(fuzzywuzzyR)

      s1 = ' It was a dark and stormy night. I was all alone sitting on a red chair.'

      s2 = ' It was a murky and stormy night. I was all alone sitting on a crimson chair.'

      init = SequenceMatcher$new(string1 = s1, string2 = s2)

      init$ratio()

      init$quick_ratio()

      init$real_quick_ratio()

      init$get_matching_blocks()

      init$get_opcodes()

    }
  }
}, silent=TRUE)
}
\references{
https://www.npmjs.com/package/difflib, http://stackoverflow.com/questions/10383044/fuzzy-string-comparison
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SequenceMatcher-new}{\code{SequenceMatcher$new()}}
\item \href{#method-SequenceMatcher-ratio}{\code{SequenceMatcher$ratio()}}
\item \href{#method-SequenceMatcher-quick_ratio}{\code{SequenceMatcher$quick_ratio()}}
\item \href{#method-SequenceMatcher-real_quick_ratio}{\code{SequenceMatcher$real_quick_ratio()}}
\item \href{#method-SequenceMatcher-get_matching_blocks}{\code{SequenceMatcher$get_matching_blocks()}}
\item \href{#method-SequenceMatcher-get_opcodes}{\code{SequenceMatcher$get_opcodes()}}
\item \href{#method-SequenceMatcher-clone}{\code{SequenceMatcher$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SequenceMatcher-new"></a>}}
\if{latex}{\out{\hypertarget{method-SequenceMatcher-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SequenceMatcher$new(string1 = NULL, string2 = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{string1}}{a character string.}

\item{\code{string2}}{a character string.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SequenceMatcher-ratio"></a>}}
\if{latex}{\out{\hypertarget{method-SequenceMatcher-ratio}{}}}
\subsection{Method \code{ratio()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SequenceMatcher$ratio()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SequenceMatcher-quick_ratio"></a>}}
\if{latex}{\out{\hypertarget{method-SequenceMatcher-quick_ratio}{}}}
\subsection{Method \code{quick_ratio()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SequenceMatcher$quick_ratio()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SequenceMatcher-real_quick_ratio"></a>}}
\if{latex}{\out{\hypertarget{method-SequenceMatcher-real_quick_ratio}{}}}
\subsection{Method \code{real_quick_ratio()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SequenceMatcher$real_quick_ratio()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SequenceMatcher-get_matching_blocks"></a>}}
\if{latex}{\out{\hypertarget{method-SequenceMatcher-get_matching_blocks}{}}}
\subsection{Method \code{get_matching_blocks()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SequenceMatcher$get_matching_blocks()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SequenceMatcher-get_opcodes"></a>}}
\if{latex}{\out{\hypertarget{method-SequenceMatcher-get_opcodes}{}}}
\subsection{Method \code{get_opcodes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SequenceMatcher$get_opcodes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SequenceMatcher-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SequenceMatcher-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SequenceMatcher$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
